<style>
    #map {
        height: 100%;
    }

    #locationField, #controls {
        position: relative;
        width: 480px;
    }
</style>
<link type="text/css" rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:300,400,500">
<section id="header">
    <div class="col-lg-12">
        <h1 class="page-header">{{ 'Profile info'|trans }}</h1>
        <ol class="breadcrumb">
            <li class="active">{{ 'Profile'|trans }}</li>
        </ol><!-- /.breadcrumb -->
        <hr />
    </div><!-- /.col-lg-12 -->
</section><!-- /#header -->
<section id="page">
    <div class="col-lg-6">
        {{ form_start(edit_profile_form, {'attr': {'class': 'sky-form blue-border', 'id': 'change-account-information-form'}}) }}
            <header>{{ 'Profile information'|trans }}</header>
            <fieldset>
                <section>
                    <div class="row">
                        {{ form_label(edit_profile_form.first_name, null, {'label_attr': {'class': 'label col col-4'}}) }}
                        <div class="col col-8">
                            <label class="input">
                                <i class="icon-append fa fa-user"></i>
                                {{ form_widget(edit_profile_form.first_name) }}
                            </label>
                        </div>
                    </div>
                </section>
                <section>
                    <div class="row">
                        {{ form_label(edit_profile_form.last_name, null, {'label_attr': {'class': 'label col col-4'}}) }}
                        <div class="col col-8">
                            <label class="input">
                                <i class="icon-append fa fa-user"></i>
                                {{ form_widget(edit_profile_form.last_name) }}
                            </label>
                        </div>
                    </div>
                </section>
                <section>
                    <div class="row">
                        {{ form_label(edit_profile_form.gender, null, {'label_attr': {'class': 'label col col-4'}}) }}
                        <div class="col col-4">
                            <label class="select">
                                {{ form_widget(edit_profile_form.gender) }}
                                <i></i>
                            </label>
                        </div>
                        <div class="col col-4"></div>
                    </div>
                </section>
                <section>
                    <div class="row">
                        {{ form_label(edit_profile_form.birthday, null, {'label_attr': {'class': 'label col col-4'}}) }}
                        <div class="col col-8">
                            <label class="input">
                                <i class="icon-append fa fa-calendar"></i>
                                {{ form_widget(edit_profile_form.birthday, {'attr': {'class': 'hasDatepicker'}}) }}
                            </label>
                        </div>
                    </div>
                </section>
                <section>
                    <div class="row">
                        {{ form_label(edit_profile_form.location_street, null, {'label_attr': {'class': 'label col col-4'}}) }}
                        <div class="col col-8">
                            <div class="row">
                                <div class="col col-12">
                                    <label class="input">
                                        <div id="locationField">
                                            <input id="autocomplete" placeholder="{{ 'Enter your address (Autocomplete)'|trans }}" onfocus="geolocate()" />
                                        </div>
                                    </label>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col col-4">
                                    <label class="input">
                                        {{ form_widget(edit_profile_form.location_street) }}
                                    </label>
                                </div>
                                <div class="col col-3">
                                    <label class="input">
                                        {{ form_widget(edit_profile_form.location_street_number) }}
                                    </label>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col col-3">
                                    <label class="input">
                                        {{ form_widget(edit_profile_form.location_postal_code) }}
                                    </label>
                                </div>
                                <div class="col col-4">
                                    <label class="input">
                                        {{ form_widget(edit_profile_form.location_city) }}
                                    </label>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col col-7">
                                    <label class="input">
                                        {{ form_widget(edit_profile_form.location_country) }}
                                    </label>
                                </div>
                            </div>
                        </div>
                    </div>
                </section>
                <section>
                    <div class="row">
                        {{ form_label(edit_profile_form.website, null, {'label_attr': {'class': 'label col col-4'}}) }}
                        <div class="col col-8">
                            <label class="input">
                                <i class="icon-append fa fa-globe"></i>
                                {{ form_widget(edit_profile_form.website) }}
                            </label>
                        </div>
                    </div>
                </section>
                <section>
                    <div class="row">
                        {{ form_label(edit_profile_form.usage, null, {'label_attr': {'class': 'label col col-4'}}) }}
                        <div class="col col-4">
                            <label class="select">
                                {{ form_widget(edit_profile_form.usage) }}
                                <i></i>
                            </label>
                        </div>
                        <div class="col col-4"></div>
                    </div>
                </section>
            </fieldset>
            <footer>
                <div class="row">
                    <div class="col col-4"></div>
                    <div class="col col-6">
                        <label class="input">{{ form_widget(edit_profile_form.password_verify) }}</label>
                    </div>
                    {{ form_widget(edit_profile_form.send, {'attr': {'class': 'btn-u'}}) }}
                </div>
            </footer>
        {{ form_end(edit_profile_form) }}
    </div>
    <div class="col-lg-6">
        <form method="post" id="change-profile-picture-form" class="sky-form blue-border">
            <header>{{ 'Profile picture'|trans }}</header>
            <fieldset>
                <section>
                    <div class="row">
                        <div id="profile-picture" class="col col-3">
                            <img class="img-thumbnail" src="{{ path('app_account_api', {'function': 'get_img', 'user_id': current_user.user_id}) }}" />
                            {# TODO: OLD CODE
                            {% if current_user_profile.profile_picture|length > 0 %}
                                <img class="img-thumbnail" src="/app/account/profile_pictures/{{ current_user_profile.profile_picture }}" />
                            {% else %}
                                <img class="img-thumbnail" src="/assets/img/user.jpg" />
                            {% endif %}#}
                        </div>
                    </div>
                </section>
                <section>
                    <div class="row">
                        <div class="col col-4">
                            <label class="input">
                                <span class="btn-u fileinput-button">
                                    <i class="glyphicon glyphicon-plus"></i>
                                    <span>{{ 'Upload file...'|trans }}</span>
                                    {# TODO: Add functionality to edit uploaded images #}
                                    <input id="fileupload" type="file" name="files[]" />
                                </span>
                            </label>
                        </div>
                        <div class="col col-8">
                            <h3 class="heading-xs"><span id="upload-progress-speed">0 kbps</span> <span id="upload-progress-percentage" class="pull-right">0%</span></h3>
                            <div class="progress progress-u progress-xxs" style="float: none; margin-top: 0;">
                                <div id="upload-progress" class="progress-bar progress-bar-blue" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" style="width: 0%"></div>
                            </div>
                        </div>
                    </div>
                </section>
            </fieldset>
        </form>
    </div>
</section>
{% set params %}user_id={{ current_user.user_id }}{% endset %}
<script type="text/javascript">
    $(document).ready(function () {

        // Initialize the jQuery File Upload widget:
        var fileUploadObject = $('#fileupload');

        fileUploadObject.fileupload({
            // Uncomment the following to send cross-domain cookies:
            //xhrFields: {withCredentials: true},
            url: '{{ path('app_account_api', {'function': 'update_profile_pic', 'parameters': params}) }}',
            // Enable image resizing, except for Android and Opera,
            // which actually support image resizing, but fail to
            // send Blob objects via XHR requests:
            //disableImageResize: /Android(?!.*Chrome)|Opera/
            //    .test(window.navigator && navigator.userAgent),
            //imageMaxWidth: 800,
            //imageMaxHeight: 800,
            //imageCrop: true, // Force cropped images
            maxFileSize: 999000,
            acceptFileTypes: /(\.|\/)(gif|jpe?g|png)$/i,
            dataType: 'json',
            done: function(e, data) {
                $.each(data.result.files, function(index, file) {
                    $('#profile-picture').html("");
                    $('<img class="img-thumbnail" />')
                        .attr('src', '/app/account/profile_pictures/' + file)
                        .appendTo('#profile-picture');
                });
            },
            progressall: function(e, data) {
                var progress = parseInt(data.loaded / data.total * 100, 10);
                $('#upload-progress').css('width', progress + '%');

                var uploadSpeed = data.bitrate; //  // Bps
                var uploadSpeedText = 'Bps';
                if(uploadSpeed > 1024) {
                    uploadSpeed = uploadSpeed / 1024; // KBps
                    uploadSpeedText = 'KBps';
                    if(uploadSpeed > 1024) {
                        uploadSpeed = uploadSpeed / 1024; // MBps
                        uploadSpeedText = 'MBps';
                        if(uploadSpeed > 1024) {
                            uploadSpeed = uploadSpeed / 1024; // GBps
                            uploadSpeedText = 'GBps';
                        }
                    }
                }
                uploadSpeed = Math.round(uploadSpeed * 100) / 100;
                $('#upload-progress-speed').text(uploadSpeed + ' ' + uploadSpeedText);
                $('#upload-progress-percentage').text(progress + '%');
            }
        });
    });
</script>
<script type="text/javascript">
    var placeSearch, autocomplete;
    var componentForm = {
        street_number: 'short_name',
        route: 'long_name',
        locality: 'long_name',
        //administrative_area_level_1: 'short_name',
        country: 'long_name',
        postal_code: 'short_name'
    };
    var input_ids = {
        street_number: 'form_location_street_number',
        route: 'form_location_street',
        locality: 'form_location_city',
        country: 'form_location_country',
        postal_code: 'form_location_postal_code'
    };

    function initAutocomplete() {
        // Create the autocomplete object, restricting the search to geographical
        // location types.
        autocomplete = new google.maps.places.Autocomplete(
            /** @type {!HTMLInputElement} */(document.getElementById('autocomplete')),
            {types: ['geocode']});

        // When the user selects an address from the dropdown, populate the address
        // fields in the form.
        autocomplete.addListener('place_changed', fillInAddress);
    }

    // [START region_fillform]
    function fillInAddress() {
        // Get the place details from the autocomplete object.
        var place = autocomplete.getPlace();

        /** Not Required as can be predefined by user
         for (var component in componentForm) {
                document.getElementById(component).value = '';
                document.getElementById(component).disabled = false;
            }
         */
        // Get each component of the address from the place details
        // and fill the corresponding field on the form.
        for (var i = 0; i < place.address_components.length; i++) {
            var addressType = place.address_components[i].types[0];
            if (componentForm[addressType]) {
                var val = place.address_components[i][componentForm[addressType]];
                console.log(input_ids[addressType]);
                document.getElementById(input_ids[addressType]).value = val;
            }
        }
    }
    // [END region_fillform]

    // [START region_geolocation]
    // Bias the autocomplete object to the user's geographical location,
    // as supplied by the browser's 'navigator.geolocation' object.
    function geolocate() {
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(function(position) {
                var geolocation = {
                    lat: position.coords.latitude,
                    lng: position.coords.longitude
                };
                var circle = new google.maps.Circle({
                    center: geolocation,
                    radius: position.coords.accuracy
                });
                autocomplete.setBounds(circle.getBounds());
            });
        }
    }
    // [END region_geolocation]
</script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBSO1fpoQuukeVKiueZxzqhLCFlkgP0IMM&signed_in=true&libraries=places&callback=initAutocomplete" async defer></script>
